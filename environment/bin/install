#!/bin/bash

# Install and configure the website in the public directory
set -xe

# Read and import dotenv variables to script
dotenv () {
  DOTENV_SHELL_LOADER_SAVED_OPTS=$(set +o)
  set -o allexport
  [ -f $1 ] && source $1
  set +o allexport
  eval "$DOTENV_SHELL_LOADER_SAVED_OPTS"
  unset DOTENV_SHELL_LOADER_SAVED_OPTS
}

# Load project environment variables
dotenv env/app.env

# Define Docker Compose conforme sistema operacional
project=$(basename $(dirname $(pwd)))
os=$(uname -s)
compose="docker-compose -p ${project} -f docker-compose.yml"

if [ 'Darwin' == $os ]; then
    compose="${compose} -f docker-compose.mac.yml"
fi

export VOLUME_PREFIX=${project}_

# Variables
XDEBUG_DATA_DIR=xdebug
XDEBUG_PROFILER_DIR=${XDEBUG_DATA_DIR}/profiler
XDEBUG_TRACE_DIR=${XDEBUG_DATA_DIR}/trace
PACKAGES_DIR=public/packages
UPLOADS_DIR="${PACKAGES_DIR}"/uploads
THEMES_DIR="${PACKAGES_DIR}"/themes
LANGUAGES_DIR="${PACKAGES_DIR}"/languages
PLUGINS_DIR="${PACKAGES_DIR}"/plugins
UPGRADE_DIR="${PACKAGES_DIR}"/upgrade
WPMU_PLUGIN_DIR="${PACKAGES_DIR}"/mu-plugins
PRIVATE_PACKAGES_DIR=wp-packages/private
PRIVATE_PLUGINS_PACKAGES="${PRIVATE_PACKAGES_DIR}/plugins/*.zip"
PRIVATE_THEMES_PACKAGES="${PRIVATE_PACKAGES_DIR}/themes/*.zip"
THEME_LANGUAGES_DIR="wp-packages/languages/themes/*.*"
PLUGINS_LANGUAGES_DIR="wp-packages/languages/plugins/*.*"
START_UPLOADS=/app/environment/extra/uploads/*

WP="${compose} run --rm wp"

${compose} pull && ${compose} build --pull

WWW_DATA_DIRS="${XDEBUG_PROFILER_DIR} ${XDEBUG_TRACE_DIR} ../${UPLOADS_DIR} ../${THEMES_DIR} ../${LANGUAGES_DIR} ../${UPGRADE_DIR} ../${PLUGINS_DIR} ../${LANGUAGES_DIR}/themes ../${LANGUAGES_DIR}/plugins"

# Cria diretórios via Docker por questões de permissão
mkdir -p ${WWW_DATA_DIRS}

# Altera usuário de uploads para www-data da imagem WP-CLI no Linux
if [ 'Darwin' != $os ]; then
    WWW_DATA="$($WP sh -c 'echo $(id -u):$(id -g)' | tr -d '\r')"
    sudo chown ${WWW_DATA} ${WWW_DATA_DIRS}
fi

# Create symlink for `mu-plugins` directory if it dosen't exists
[ -d ../${WPMU_PLUGIN_DIR} ] || ln -fs ../../wp-packages/mu-plugins ../${WPMU_PLUGIN_DIR}

# Composer
${compose} run --rm cli-composer install
${compose} run --rm inc-composer install
${compose} run --rm wp-composer install

# NPM
${compose} run --rm assets-node npm install
${compose} run --rm assets-node npm run build

# Copy required uploads file
$WP bash -c "[ -e ${START_UPLOADS} ] && cp -r ${START_UPLOADS} /app/${UPLOADS_DIR}"

if [ ! $($WP core is-installed) &> /dev/null ]; then
    $WP db reset --yes 2> /dev/null || $WP db create
    $WP core install --url="${WP_URL}" --title="${WP_TITLE}" --admin_user="${WP_USER}" --admin_password="${WP_PASSWORD}" --admin_email="${WP_EMAIL}" --skip-email
fi

# Install theme language
$WP language core install "${WP_LANG}" --activate

# Update language of core, theme and plugins
$WP language core update

# Install extra plugins
PLUGINS="../${PRIVATE_PLUGINS_PACKAGES}"
if [ $(ls -la ${PLUGINS} 2> /dev/null | wc -l) -gt 0 ]; then # verify if has packages inner the directory
    for PLUGIN in $PLUGINS
    do
        $WP plugin install ../${PLUGIN} --force
    done
fi

# Install extra themes
THEMES="../${PRIVATE_THEMES_PACKAGES}"
if [ $(ls -la ${THEMES} 2> /dev/null | wc -l) -gt 0 ]; then # verify if has packages inner the directory
    for THEME in $THEMES
    do
        $WP theme install ../${THEME} --force
    done
fi

# Install themes languages
LANGUAGES="../${THEME_LANGUAGES_DIR}"
if [ $(ls -la ${LANGUAGES} 2> /dev/null | wc -l) -gt 0 ]; then # verify if has languages inner the directory
    for LANGUAGE in $LANGUAGES
    do
        ln -sf ../../../${LANGUAGE} ../${LANGUAGES_DIR}/themes/
    done
fi

# Install plugins languages
PLUGINS_LANGUAGES="../${PLUGINS_LANGUAGES_DIR}"
if [ $(ls -la ${PLUGINS_LANGUAGES} 2> /dev/null | wc -l) -gt 0 ]; then # verify if has languages inner the directory
    for PLUGINS_LANGUAGE in $PLUGINS_LANGUAGES
    do
        ln -sf ../../../${PLUGINS_LANGUAGE} ../${LANGUAGES_DIR}/plugins/
    done
fi

# Activate theme
$WP theme activate "${THEME_ACTIVE}"

# Activate all plugins
$WP plugin activate --all

# Install plugins languages
$WP language plugin list --all --language=${WP_LANG} --field=plugin || xargs -I % bash -c "echo % && ${WP} language plugin install % ${WP_LANG}"
