# Development project infrastructure generated over the Docker
version: "3.7"

services:
  # MariaDB
  db:
    image: mariadb:10.3
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql:Z
      - ./initdb:/docker-entrypoint-initdb.d:Z
    env_file:
      - ./env/mysql.env

  # Nginx
  server:
    build:
      context: ./docker/nginx
    links:
      - wordpress
    ports:
      - "80:80"
    volumes:
      - ../:/app:Z
      - ./docker/nginx/etc/nginx.conf:/etc/nginx/nginx.conf:Z

  # PHP-FPM with WP dependencies
  wordpress:
    build:
      context: ./docker/wp-fpm
    volumes:
      - ../:/app:Z
      - ./xdebug/profiler:/tmp/xdebug_profiler:Z
      - ./xdebug/trace:/tmp/xdebug_trace:Z
    env_file:
      - ./env/app.env
      - ./env/xdebug.env
    depends_on:
      - db
      - smtp

  # WP CLI
  wp:
    build:
      context: ./docker/wp-cli
    depends_on:
      - db
      - smtp
    env_file:
      - ./env/app.env
      - ./env/xdebug.env
    volumes:
      - ../:/app:Z
      - ./xdebug/profiler:/tmp/xdebug_profiler:Z
      - ./xdebug/trace:/tmp/xdebug_trace:Z

  # Node 8.2 with NPM/Yarn/npx
  assets-node:
    image: node:10
    volumes:
      - ../:/app:Z
    working_dir: /app/assets

  # Composer
  inc-composer:
    image: composer
    volumes:
      - ../inc:/app:Z
      # Map local user Composer directory with container for cache packages
      - ~/.docker_cache/composer:/tmp/cache:Z

  # Composer WP packages
  wp-composer:
    image: composer
    volumes:
      - ../wp-packages:/app:Z
      - ../public:/public:Z
      # Map local user Composer directory with container for cache packages
      - ~/.docker_cache/composer:/tmp/cache:Z

  # Composer CLI
  cli-composer:
    image: composer
    volumes:
      - ../cli:/app:Z
      # Map local user Composer directory with container for cache packages
      - ~/.docker_cache/composer:/tmp/cache:Z

  # Composer CLI
  phpqa-composer:
    image: composer
    volumes:
      - ../phpqa:/app:Z
      # Map local user Composer directory with container for cache packages
      - ~/.docker_cache/composer:/tmp/cache:Z

  # PHPQA
  phpqa:
    image: jakzal/phpqa:alpine
    volumes:
      - ../:/app:Z
      - ../phpqa/.tmp-phpqa:/tmp:Z
    working_dir: /app/phpqa

  # Test SMTP server
  smtp:
    image: schickling/mailcatcher
    ports:
      - 1025
      - 1080:1080
    environment:
      MAILCATCHER_PORT: 1025

  # Deployer
  deployer:
    build:
      context: ./docker/deployer
      args:
        - PHP_VERSION=7
        - DEPLOYER_VERSION=latest
    volumes:
      - ../deploy:/deploy:Z
      - ../deploy/.ssh:/root/.ssh:Z
    env_file:
      - ./env/deploy.env

  # Xdebug profiling viewer
  webgrind:
    image: wodby/webgrind:1.5
    ports:
      - "8000:8080"
    volumes:
      - ./xdebug/profiler:/tmp:Z
      - ../:/app:Z

volumes:
  mysql_data:
    name: ${VOLUME_PREFIX}mysql_data
